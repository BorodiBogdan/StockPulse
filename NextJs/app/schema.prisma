generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

enum Role {
    USER
    ADMIN
}

model User {
    id        String   @id @default(cuid())
    username  String   @unique
    email     String   @unique
    password  String
    role      Role     @default(USER)
    createdAt DateTime @default(now()) @map(name: "created_at")
    updatedAt DateTime @updatedAt @map(name: "updated_at")

    // This is the many-to-many relation field pointing to the Stock model
    stocks         Stock[]
    stockWatchList StockWatchList[]

    @@map(name: "users")
}

model Stock {
    id        String   @id @default(cuid())
    symbol    String   @unique
    name      String
    createdAt DateTime @default(now()) @map(name: "created_at")
    updatedAt DateTime @updatedAt @map(name: "updated_at")

    // This field links the Stock to a Users and completes the relation
    stockWatchList StockWatchList[]
    user           User[]
}

model StockWatchList {
    id          String    @id @default(cuid())
    stock       Stock[]
    user        User      @relation(fields: [username], references: [username])
    username    String
    description String    @default("No description")
    createdAt   DateTime  @default(now()) @map(name: "created_at")
    updatedAt   DateTime  @updatedAt @map(name: "updated_at")
    comments    Comment[]
}

model Comment {
    id          String         @id @default(cuid())
    watchListId String
    watchList   StockWatchList @relation(fields: [watchListId], references: [id])
    username    String
    createdAt   DateTime       @default(now()) @map(name: "created_at")
    updatedAt   DateTime       @updatedAt @map(name: "updated_at")
    description String
}
